// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	homestay "go-travel/service/admin/cmd/api/internal/handler/homestay"
	manager "go-travel/service/admin/cmd/api/internal/handler/manager"
	order "go-travel/service/admin/cmd/api/internal/handler/order"
	payment "go-travel/service/admin/cmd/api/internal/handler/payment"
	"go-travel/service/admin/cmd/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/login",
				Handler: manager.AdminLoginHandler(serverCtx),
			},
		},
		rest.WithPrefix("/admin_login"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/manager_info",
				Handler: manager.ManagerInfoHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/manager_pwd",
				Handler: manager.ChangePwdHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/user_list",
				Handler: manager.UserListHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/user_delete",
				Handler: manager.UserDeleteHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/admin"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/homestay_add",
				Handler: homestay.HomestayAddHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/homestay_delete",
				Handler: homestay.HomestayDeleteHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/homestay_List",
				Handler: homestay.HomestayListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/homestay_update",
				Handler: homestay.HomestayUpdateHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/homestayactivity_add",
				Handler: homestay.HomestayActivityAddHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/homestayactivity_delete",
				Handler: homestay.HomestayActivityDelteHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/homestayactivity_list",
				Handler: homestay.HomestayActivityListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/homestayactivity_update",
				Handler: homestay.HomestayActivityUpdateHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/homestaybusiness_add",
				Handler: homestay.HomestayBusinessAddHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/homestaybusiness_delete",
				Handler: homestay.HomestayBusinessDeleteHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/homestaybusiness_update",
				Handler: homestay.HomestayBusinessUpdateHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/homestaybusiness_list",
				Handler: homestay.HomestayBusinessListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/homestaycomment_add",
				Handler: homestay.HomestaycommentAddHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/homestaycomment_delete",
				Handler: homestay.HomestaycommentDeleteHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/homestaycomment_list",
				Handler: homestay.HomestaycommentListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/homestaycomment_update",
				Handler: homestay.HomestaycommentUpdateHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/admin"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/payment_list",
				Handler: payment.PaymentListHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/admin"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/order_add",
				Handler: order.OrderAddHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/order_delete",
				Handler: order.OrderDeleteHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/order_list",
				Handler: order.OrderListHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/order_update",
				Handler: order.OrderUpdateHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/admin"),
	)
}
