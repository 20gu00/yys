syntax = "proto3";

option go_package = "./pb";

package pb;


//model
message User {
  int64 id = 1;
  string mobile = 2;
  string nickname =3;
  int64  sex = 4;
  string avatar = 5;
  string info = 6;
}

message UserAuth {
  int64  id = 1;
  int64  userId = 2;
  string authType = 3;
  string authKey = 4;
}


//req „ÄÅresp
message RegisterReq {
  string mobile = 1;
  string nickname = 2;
  string password = 3;
  string authKey = 4;
  string authType = 5;
}
message RegisterResp {
  string accessToken = 1;
  int64  accessExpire = 2;
  int64  refreshAfter = 3;
}

message LoginReq {
  string  authType = 1;
  string authKey = 2;
  string  password = 3;
}
message LoginResp {
  string accessToken = 1;
  int64  accessExpire = 2;
  int64  refreshAfter = 3;
}

message GetUserInfoReq {
  int64  id = 1;
}
message GetUserInfoResp {
   User user = 1;
}

message GetUserAuthByAuthKeyReq {
  string  authKey = 1;
  string  authType = 2;
}
message GetUserAuthByAuthKeyResp {
   UserAuth userAuth = 1;
}

message GetUserAuthByUserIdReq {
  int64  userId = 1;
  string  authType = 2;
}
message GetUserAuthyUserIdResp {
   UserAuth userAuth = 1;
}

message GenerateTokenReq {
  int64 userId = 1;
}
message GenerateTokenResp {
  string accessToken = 1;
  int64  accessExpire = 2;
  int64  refreshAfter = 3;
}

//provide to admin use

//List
message UserListItemResp {
  int64 ID = 1;
  string CreateTime = 2;  //string
  string UpdateTime = 3;
  string DeleteTime = 4;
  int64 DelState = 5;
  int64 Version = 6;
  string Mobile = 7;
  string Password = 8;
  string NickName = 9;
  int64 Sex = 10;
  string Avatar = 11;
  string Info = 12;
}
message UserListReq{
  //string Info = 1;
  int64 PageNo = 2;
  int64 PageSize = 3;
}

message UserListResp{
  int64 Total = 1;
  repeated UserListItemResp List = 2;
}

//Delete
message UserDeleteReq{
  int64 Id=1;
}

message UserDeleteResp{
  int64 pong=1;
}

//service
service usercenter{
  rpc login(LoginReq) returns(LoginResp);
  rpc register(RegisterReq) returns(RegisterResp);
  rpc getUserInfo(GetUserInfoReq) returns(GetUserInfoResp);
  rpc getUserAuthByAuthKey(GetUserAuthByAuthKeyReq) returns(GetUserAuthByAuthKeyResp);
  rpc getUserAuthByUserId(GetUserAuthByUserIdReq) returns(GetUserAuthyUserIdResp);
  rpc generateToken(GenerateTokenReq) returns(GenerateTokenResp);

  //provide to admin use
  rpc userList(UserListReq) returns (UserListResp);
  rpc userDelete(UserDeleteReq) returns (UserDeleteResp);
}
