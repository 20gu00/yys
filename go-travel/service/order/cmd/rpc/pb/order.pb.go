// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: order.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HomestayOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Sn                  string `protobuf:"bytes,2,opt,name=sn,proto3" json:"sn"`
	UserId              int64  `protobuf:"varint,3,opt,name=userId,proto3" json:"userId"`
	HomestayId          int64  `protobuf:"varint,4,opt,name=homestayId,proto3" json:"homestayId"`
	Title               string `protobuf:"bytes,5,opt,name=title,proto3" json:"title"`
	SubTitle            string `protobuf:"bytes,6,opt,name=subTitle,proto3" json:"subTitle"`
	Cover               string `protobuf:"bytes,7,opt,name=cover,proto3" json:"cover"`
	Info                string `protobuf:"bytes,8,opt,name=info,proto3" json:"info"`
	PeopleNum           int64  `protobuf:"varint,9,opt,name=peopleNum,proto3" json:"peopleNum"`
	RowType             int64  `protobuf:"varint,10,opt,name=rowType,proto3" json:"rowType"`
	FoodInfo            string `protobuf:"bytes,11,opt,name=foodInfo,proto3" json:"foodInfo"`
	FoodPrice           int64  `protobuf:"varint,12,opt,name=foodPrice,proto3" json:"foodPrice"`
	HomestayPrice       int64  `protobuf:"varint,13,opt,name=homestayPrice,proto3" json:"homestayPrice"`
	MarketHomestayPrice int64  `protobuf:"varint,14,opt,name=marketHomestayPrice,proto3" json:"marketHomestayPrice"`
	HomestayBusinessId  int64  `protobuf:"varint,15,opt,name=homestayBusinessId,proto3" json:"homestayBusinessId"`
	HomestayUserId      int64  `protobuf:"varint,16,opt,name=homestayUserId,proto3" json:"homestayUserId"`
	LiveStartDate       int64  `protobuf:"varint,17,opt,name=liveStartDate,proto3" json:"liveStartDate"`
	LiveEndDate         int64  `protobuf:"varint,18,opt,name=liveEndDate,proto3" json:"liveEndDate"`
	LivePeopleNum       int64  `protobuf:"varint,19,opt,name=livePeopleNum,proto3" json:"livePeopleNum"`
	TradeState          int64  `protobuf:"varint,20,opt,name=tradeState,proto3" json:"tradeState"`
	TradeCode           string `protobuf:"bytes,21,opt,name=tradeCode,proto3" json:"tradeCode"`
	Remark              string `protobuf:"bytes,22,opt,name=remark,proto3" json:"remark"`
	OrderTotalPrice     int64  `protobuf:"varint,23,opt,name=orderTotalPrice,proto3" json:"orderTotalPrice"`
	FoodTotalPrice      int64  `protobuf:"varint,24,opt,name=foodTotalPrice,proto3" json:"foodTotalPrice"`
	HomestayTotalPrice  int64  `protobuf:"varint,25,opt,name=homestayTotalPrice,proto3" json:"homestayTotalPrice"`
	CreateTime          int64  `protobuf:"varint,26,opt,name=createTime,proto3" json:"createTime"`
	NeedFood            int64  `protobuf:"varint,27,opt,name=needFood,proto3" json:"needFood"`
	Version             int64  `protobuf:"varint,28,opt,name=version,proto3" json:"version"`
	DelState            int64  `protobuf:"varint,29,opt,name=delState,proto3" json:"delState"`
	UpdateTime          int64  `protobuf:"varint,30,opt,name=updateTime,proto3" json:"updateTime"`
	DeleteTime          int64  `protobuf:"varint,31,opt,name=deleteTime,proto3" json:"deleteTime"`
}

func (x *HomestayOrder) Reset() {
	*x = HomestayOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomestayOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomestayOrder) ProtoMessage() {}

func (x *HomestayOrder) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomestayOrder.ProtoReflect.Descriptor instead.
func (*HomestayOrder) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{0}
}

func (x *HomestayOrder) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *HomestayOrder) GetSn() string {
	if x != nil {
		return x.Sn
	}
	return ""
}

func (x *HomestayOrder) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *HomestayOrder) GetHomestayId() int64 {
	if x != nil {
		return x.HomestayId
	}
	return 0
}

func (x *HomestayOrder) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *HomestayOrder) GetSubTitle() string {
	if x != nil {
		return x.SubTitle
	}
	return ""
}

func (x *HomestayOrder) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *HomestayOrder) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *HomestayOrder) GetPeopleNum() int64 {
	if x != nil {
		return x.PeopleNum
	}
	return 0
}

func (x *HomestayOrder) GetRowType() int64 {
	if x != nil {
		return x.RowType
	}
	return 0
}

func (x *HomestayOrder) GetFoodInfo() string {
	if x != nil {
		return x.FoodInfo
	}
	return ""
}

func (x *HomestayOrder) GetFoodPrice() int64 {
	if x != nil {
		return x.FoodPrice
	}
	return 0
}

func (x *HomestayOrder) GetHomestayPrice() int64 {
	if x != nil {
		return x.HomestayPrice
	}
	return 0
}

func (x *HomestayOrder) GetMarketHomestayPrice() int64 {
	if x != nil {
		return x.MarketHomestayPrice
	}
	return 0
}

func (x *HomestayOrder) GetHomestayBusinessId() int64 {
	if x != nil {
		return x.HomestayBusinessId
	}
	return 0
}

func (x *HomestayOrder) GetHomestayUserId() int64 {
	if x != nil {
		return x.HomestayUserId
	}
	return 0
}

func (x *HomestayOrder) GetLiveStartDate() int64 {
	if x != nil {
		return x.LiveStartDate
	}
	return 0
}

func (x *HomestayOrder) GetLiveEndDate() int64 {
	if x != nil {
		return x.LiveEndDate
	}
	return 0
}

func (x *HomestayOrder) GetLivePeopleNum() int64 {
	if x != nil {
		return x.LivePeopleNum
	}
	return 0
}

func (x *HomestayOrder) GetTradeState() int64 {
	if x != nil {
		return x.TradeState
	}
	return 0
}

func (x *HomestayOrder) GetTradeCode() string {
	if x != nil {
		return x.TradeCode
	}
	return ""
}

func (x *HomestayOrder) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *HomestayOrder) GetOrderTotalPrice() int64 {
	if x != nil {
		return x.OrderTotalPrice
	}
	return 0
}

func (x *HomestayOrder) GetFoodTotalPrice() int64 {
	if x != nil {
		return x.FoodTotalPrice
	}
	return 0
}

func (x *HomestayOrder) GetHomestayTotalPrice() int64 {
	if x != nil {
		return x.HomestayTotalPrice
	}
	return 0
}

func (x *HomestayOrder) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *HomestayOrder) GetNeedFood() int64 {
	if x != nil {
		return x.NeedFood
	}
	return 0
}

func (x *HomestayOrder) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *HomestayOrder) GetDelState() int64 {
	if x != nil {
		return x.DelState
	}
	return 0
}

func (x *HomestayOrder) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *HomestayOrder) GetDeleteTime() int64 {
	if x != nil {
		return x.DeleteTime
	}
	return 0
}

type CreateHomestayOrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HomestayId    int64  `protobuf:"varint,1,opt,name=homestayId,proto3" json:"homestayId"`
	IsFood        bool   `protobuf:"varint,2,opt,name=isFood,proto3" json:"isFood"`
	LiveStartTime int64  `protobuf:"varint,3,opt,name=liveStartTime,proto3" json:"liveStartTime"`
	LiveEndTime   int64  `protobuf:"varint,4,opt,name=liveEndTime,proto3" json:"liveEndTime"`
	UserId        int64  `protobuf:"varint,5,opt,name=userId,proto3" json:"userId"`
	LivePeopleNum int64  `protobuf:"varint,6,opt,name=livePeopleNum,proto3" json:"livePeopleNum"`
	Remark        string `protobuf:"bytes,7,opt,name=remark,proto3" json:"remark"`
}

func (x *CreateHomestayOrderReq) Reset() {
	*x = CreateHomestayOrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateHomestayOrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHomestayOrderReq) ProtoMessage() {}

func (x *CreateHomestayOrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHomestayOrderReq.ProtoReflect.Descriptor instead.
func (*CreateHomestayOrderReq) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{1}
}

func (x *CreateHomestayOrderReq) GetHomestayId() int64 {
	if x != nil {
		return x.HomestayId
	}
	return 0
}

func (x *CreateHomestayOrderReq) GetIsFood() bool {
	if x != nil {
		return x.IsFood
	}
	return false
}

func (x *CreateHomestayOrderReq) GetLiveStartTime() int64 {
	if x != nil {
		return x.LiveStartTime
	}
	return 0
}

func (x *CreateHomestayOrderReq) GetLiveEndTime() int64 {
	if x != nil {
		return x.LiveEndTime
	}
	return 0
}

func (x *CreateHomestayOrderReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateHomestayOrderReq) GetLivePeopleNum() int64 {
	if x != nil {
		return x.LivePeopleNum
	}
	return 0
}

func (x *CreateHomestayOrderReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type CreateHomestayOrderResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sn string `protobuf:"bytes,1,opt,name=sn,proto3" json:"sn"`
}

func (x *CreateHomestayOrderResp) Reset() {
	*x = CreateHomestayOrderResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateHomestayOrderResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHomestayOrderResp) ProtoMessage() {}

func (x *CreateHomestayOrderResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHomestayOrderResp.ProtoReflect.Descriptor instead.
func (*CreateHomestayOrderResp) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{2}
}

func (x *CreateHomestayOrderResp) GetSn() string {
	if x != nil {
		return x.Sn
	}
	return ""
}

type HomestayOrderDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sn string `protobuf:"bytes,1,opt,name=sn,proto3" json:"sn"`
}

func (x *HomestayOrderDetailReq) Reset() {
	*x = HomestayOrderDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomestayOrderDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomestayOrderDetailReq) ProtoMessage() {}

func (x *HomestayOrderDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomestayOrderDetailReq.ProtoReflect.Descriptor instead.
func (*HomestayOrderDetailReq) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{3}
}

func (x *HomestayOrderDetailReq) GetSn() string {
	if x != nil {
		return x.Sn
	}
	return ""
}

type HomestayOrderDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HomestayOrder *HomestayOrder `protobuf:"bytes,1,opt,name=homestayOrder,proto3" json:"homestayOrder"`
}

func (x *HomestayOrderDetailResp) Reset() {
	*x = HomestayOrderDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomestayOrderDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomestayOrderDetailResp) ProtoMessage() {}

func (x *HomestayOrderDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomestayOrderDetailResp.ProtoReflect.Descriptor instead.
func (*HomestayOrderDetailResp) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{4}
}

func (x *HomestayOrderDetailResp) GetHomestayOrder() *HomestayOrder {
	if x != nil {
		return x.HomestayOrder
	}
	return nil
}

type UpdateHomestayOrderTradeStateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sn         string `protobuf:"bytes,1,opt,name=sn,proto3" json:"sn"`
	TradeState int64  `protobuf:"varint,2,opt,name=tradeState,proto3" json:"tradeState"` //-1: 已取消 0:待支付 1:未使用 2:已使用  3:已过关闭
}

func (x *UpdateHomestayOrderTradeStateReq) Reset() {
	*x = UpdateHomestayOrderTradeStateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHomestayOrderTradeStateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHomestayOrderTradeStateReq) ProtoMessage() {}

func (x *UpdateHomestayOrderTradeStateReq) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHomestayOrderTradeStateReq.ProtoReflect.Descriptor instead.
func (*UpdateHomestayOrderTradeStateReq) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateHomestayOrderTradeStateReq) GetSn() string {
	if x != nil {
		return x.Sn
	}
	return ""
}

func (x *UpdateHomestayOrderTradeStateReq) GetTradeState() int64 {
	if x != nil {
		return x.TradeState
	}
	return 0
}

type UpdateHomestayOrderTradeStateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	UserId          int64  `protobuf:"varint,2,opt,name=userId,proto3" json:"userId"`
	Sn              string `protobuf:"bytes,3,opt,name=sn,proto3" json:"sn"`
	TradeCode       string `protobuf:"bytes,4,opt,name=tradeCode,proto3" json:"tradeCode"`
	LiveStartDate   int64  `protobuf:"varint,5,opt,name=liveStartDate,proto3" json:"liveStartDate"`
	LiveEndDate     int64  `protobuf:"varint,6,opt,name=liveEndDate,proto3" json:"liveEndDate"`
	OrderTotalPrice int64  `protobuf:"varint,7,opt,name=orderTotalPrice,proto3" json:"orderTotalPrice"`
	Title           string `protobuf:"bytes,8,opt,name=title,proto3" json:"title"`
}

func (x *UpdateHomestayOrderTradeStateResp) Reset() {
	*x = UpdateHomestayOrderTradeStateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHomestayOrderTradeStateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHomestayOrderTradeStateResp) ProtoMessage() {}

func (x *UpdateHomestayOrderTradeStateResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHomestayOrderTradeStateResp.ProtoReflect.Descriptor instead.
func (*UpdateHomestayOrderTradeStateResp) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateHomestayOrderTradeStateResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateHomestayOrderTradeStateResp) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateHomestayOrderTradeStateResp) GetSn() string {
	if x != nil {
		return x.Sn
	}
	return ""
}

func (x *UpdateHomestayOrderTradeStateResp) GetTradeCode() string {
	if x != nil {
		return x.TradeCode
	}
	return ""
}

func (x *UpdateHomestayOrderTradeStateResp) GetLiveStartDate() int64 {
	if x != nil {
		return x.LiveStartDate
	}
	return 0
}

func (x *UpdateHomestayOrderTradeStateResp) GetLiveEndDate() int64 {
	if x != nil {
		return x.LiveEndDate
	}
	return 0
}

func (x *UpdateHomestayOrderTradeStateResp) GetOrderTotalPrice() int64 {
	if x != nil {
		return x.OrderTotalPrice
	}
	return 0
}

func (x *UpdateHomestayOrderTradeStateResp) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type UserHomestayOrderListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastId      int64 `protobuf:"varint,1,opt,name=lastId,proto3" json:"lastId"`
	PageSize    int64 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize"`
	UserId      int64 `protobuf:"varint,3,opt,name=userId,proto3" json:"userId"`
	TraderState int64 `protobuf:"varint,4,opt,name=traderState,proto3" json:"traderState"`
}

func (x *UserHomestayOrderListReq) Reset() {
	*x = UserHomestayOrderListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserHomestayOrderListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserHomestayOrderListReq) ProtoMessage() {}

func (x *UserHomestayOrderListReq) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserHomestayOrderListReq.ProtoReflect.Descriptor instead.
func (*UserHomestayOrderListReq) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{7}
}

func (x *UserHomestayOrderListReq) GetLastId() int64 {
	if x != nil {
		return x.LastId
	}
	return 0
}

func (x *UserHomestayOrderListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *UserHomestayOrderListReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserHomestayOrderListReq) GetTraderState() int64 {
	if x != nil {
		return x.TraderState
	}
	return 0
}

type UserHomestayOrderListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*HomestayOrder `protobuf:"bytes,1,rep,name=list,proto3" json:"list"`
}

func (x *UserHomestayOrderListResp) Reset() {
	*x = UserHomestayOrderListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserHomestayOrderListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserHomestayOrderListResp) ProtoMessage() {}

func (x *UserHomestayOrderListResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserHomestayOrderListResp.ProtoReflect.Descriptor instead.
func (*UserHomestayOrderListResp) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{8}
}

func (x *UserHomestayOrderListResp) GetList() []*HomestayOrder {
	if x != nil {
		return x.List
	}
	return nil
}

//provide to admin use
type AddOrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id"`
	CreateTime          string `protobuf:"bytes,2,opt,name=CreateTime,proto3" json:"CreateTime"`
	UpdateTime          string `protobuf:"bytes,3,opt,name=UpdateTime,proto3" json:"UpdateTime"`
	DeleteTime          string `protobuf:"bytes,4,opt,name=DeleteTime,proto3" json:"DeleteTime"`
	Version             int64  `protobuf:"varint,5,opt,name=version,proto3" json:"version"`
	DelState            int64  `protobuf:"varint,6,opt,name=DelState,proto3" json:"DelState"`
	Sn                  string `protobuf:"bytes,7,opt,name=Sn,proto3" json:"Sn"`
	HomestayId          int64  `protobuf:"varint,8,opt,name=HomestayId,proto3" json:"HomestayId"`
	UserId              int64  `protobuf:"varint,9,opt,name=UserId,proto3" json:"UserId"`
	Title               string `protobuf:"bytes,10,opt,name=Title,proto3" json:"Title"`
	SubTitle            string `protobuf:"bytes,11,opt,name=SubTitle,proto3" json:"SubTitle"`
	Cover               string `protobuf:"bytes,12,opt,name=Cover,proto3" json:"Cover"`
	Info                string `protobuf:"bytes,13,opt,name=Info,proto3" json:"Info"`
	PeopleNum           int64  `protobuf:"varint,14,opt,name=PeopleNum,proto3" json:"PeopleNum"`
	RowType             int64  `protobuf:"varint,15,opt,name=RowType,proto3" json:"RowType"`
	NeedFood            int64  `protobuf:"varint,16,opt,name=NeedFood,proto3" json:"NeedFood"`
	FoodInfo            string `protobuf:"bytes,17,opt,name=FoodInfo,proto3" json:"FoodInfo"`
	FoodPrice           int64  `protobuf:"varint,18,opt,name=FoodPrice,proto3" json:"FoodPrice"`
	HomestayPrice       int64  `protobuf:"varint,19,opt,name=HomestayPrice,proto3" json:"HomestayPrice"`
	MarketHomestayPrice int64  `protobuf:"varint,20,opt,name=MarketHomestayPrice,proto3" json:"MarketHomestayPrice"`
	HomwstayBusinessId  int64  `protobuf:"varint,21,opt,name=HomwstayBusinessId,proto3" json:"HomwstayBusinessId"`
	HomestayUserId      int64  `protobuf:"varint,22,opt,name=HomestayUserId,proto3" json:"HomestayUserId"`
	LiveStartDate       int64  `protobuf:"varint,23,opt,name=LiveStartDate,proto3" json:"LiveStartDate"`
	LiveEndDate         int64  `protobuf:"varint,24,opt,name=LiveEndDate,proto3" json:"LiveEndDate"`
	LivePeopleNum       int64  `protobuf:"varint,25,opt,name=LivePeopleNum,proto3" json:"LivePeopleNum"`
	TradeState          int64  `protobuf:"varint,26,opt,name=TradeState,proto3" json:"TradeState"`
	TradeCode           string `protobuf:"bytes,27,opt,name=TradeCode,proto3" json:"TradeCode"`
	Remark              string `protobuf:"bytes,28,opt,name=Remark,proto3" json:"Remark"`
	OrderTotalPrice     int64  `protobuf:"varint,29,opt,name=OrderTotalPrice,proto3" json:"OrderTotalPrice"`
	FoodTotalPrice      int64  `protobuf:"varint,30,opt,name=FoodTotalPrice,proto3" json:"FoodTotalPrice"`
	HomestayTotalPrice  int64  `protobuf:"varint,31,opt,name=HomestayTotalPrice,proto3" json:"HomestayTotalPrice"`
}

func (x *AddOrderReq) Reset() {
	*x = AddOrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrderReq) ProtoMessage() {}

func (x *AddOrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrderReq.ProtoReflect.Descriptor instead.
func (*AddOrderReq) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{9}
}

func (x *AddOrderReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddOrderReq) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *AddOrderReq) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *AddOrderReq) GetDeleteTime() string {
	if x != nil {
		return x.DeleteTime
	}
	return ""
}

func (x *AddOrderReq) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *AddOrderReq) GetDelState() int64 {
	if x != nil {
		return x.DelState
	}
	return 0
}

func (x *AddOrderReq) GetSn() string {
	if x != nil {
		return x.Sn
	}
	return ""
}

func (x *AddOrderReq) GetHomestayId() int64 {
	if x != nil {
		return x.HomestayId
	}
	return 0
}

func (x *AddOrderReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AddOrderReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddOrderReq) GetSubTitle() string {
	if x != nil {
		return x.SubTitle
	}
	return ""
}

func (x *AddOrderReq) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *AddOrderReq) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *AddOrderReq) GetPeopleNum() int64 {
	if x != nil {
		return x.PeopleNum
	}
	return 0
}

func (x *AddOrderReq) GetRowType() int64 {
	if x != nil {
		return x.RowType
	}
	return 0
}

func (x *AddOrderReq) GetNeedFood() int64 {
	if x != nil {
		return x.NeedFood
	}
	return 0
}

func (x *AddOrderReq) GetFoodInfo() string {
	if x != nil {
		return x.FoodInfo
	}
	return ""
}

func (x *AddOrderReq) GetFoodPrice() int64 {
	if x != nil {
		return x.FoodPrice
	}
	return 0
}

func (x *AddOrderReq) GetHomestayPrice() int64 {
	if x != nil {
		return x.HomestayPrice
	}
	return 0
}

func (x *AddOrderReq) GetMarketHomestayPrice() int64 {
	if x != nil {
		return x.MarketHomestayPrice
	}
	return 0
}

func (x *AddOrderReq) GetHomwstayBusinessId() int64 {
	if x != nil {
		return x.HomwstayBusinessId
	}
	return 0
}

func (x *AddOrderReq) GetHomestayUserId() int64 {
	if x != nil {
		return x.HomestayUserId
	}
	return 0
}

func (x *AddOrderReq) GetLiveStartDate() int64 {
	if x != nil {
		return x.LiveStartDate
	}
	return 0
}

func (x *AddOrderReq) GetLiveEndDate() int64 {
	if x != nil {
		return x.LiveEndDate
	}
	return 0
}

func (x *AddOrderReq) GetLivePeopleNum() int64 {
	if x != nil {
		return x.LivePeopleNum
	}
	return 0
}

func (x *AddOrderReq) GetTradeState() int64 {
	if x != nil {
		return x.TradeState
	}
	return 0
}

func (x *AddOrderReq) GetTradeCode() string {
	if x != nil {
		return x.TradeCode
	}
	return ""
}

func (x *AddOrderReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *AddOrderReq) GetOrderTotalPrice() int64 {
	if x != nil {
		return x.OrderTotalPrice
	}
	return 0
}

func (x *AddOrderReq) GetFoodTotalPrice() int64 {
	if x != nil {
		return x.FoodTotalPrice
	}
	return 0
}

func (x *AddOrderReq) GetHomestayTotalPrice() int64 {
	if x != nil {
		return x.HomestayTotalPrice
	}
	return 0
}

type AddOrderResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong int64 `protobuf:"varint,1,opt,name=Pong,proto3" json:"Pong"`
}

func (x *AddOrderResp) Reset() {
	*x = AddOrderResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddOrderResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrderResp) ProtoMessage() {}

func (x *AddOrderResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrderResp.ProtoReflect.Descriptor instead.
func (*AddOrderResp) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{10}
}

func (x *AddOrderResp) GetPong() int64 {
	if x != nil {
		return x.Pong
	}
	return 0
}

type DeleteOrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id"`
}

func (x *DeleteOrderReq) Reset() {
	*x = DeleteOrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrderReq) ProtoMessage() {}

func (x *DeleteOrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrderReq.ProtoReflect.Descriptor instead.
func (*DeleteOrderReq) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteOrderReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteOrderResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong int64 `protobuf:"varint,1,opt,name=Pong,proto3" json:"Pong"`
}

func (x *DeleteOrderResp) Reset() {
	*x = DeleteOrderResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOrderResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOrderResp) ProtoMessage() {}

func (x *DeleteOrderResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOrderResp.ProtoReflect.Descriptor instead.
func (*DeleteOrderResp) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteOrderResp) GetPong() int64 {
	if x != nil {
		return x.Pong
	}
	return 0
}

type ListOrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info     string `protobuf:"bytes,1,opt,name=Info,proto3" json:"Info"`
	Page     int64  `protobuf:"varint,2,opt,name=Page,proto3" json:"Page"`
	PageSize int64  `protobuf:"varint,3,opt,name=PageSize,proto3" json:"PageSize"`
}

func (x *ListOrderReq) Reset() {
	*x = ListOrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrderReq) ProtoMessage() {}

func (x *ListOrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrderReq.ProtoReflect.Descriptor instead.
func (*ListOrderReq) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{13}
}

func (x *ListOrderReq) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *ListOrderReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListOrderReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListOrderItemResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id"`
	CreateTime          string `protobuf:"bytes,2,opt,name=CreateTime,proto3" json:"CreateTime"`
	UpdateTime          string `protobuf:"bytes,3,opt,name=UpdateTime,proto3" json:"UpdateTime"`
	DeleteTime          string `protobuf:"bytes,4,opt,name=DeleteTime,proto3" json:"DeleteTime"`
	Version             int64  `protobuf:"varint,5,opt,name=version,proto3" json:"version"`
	DelState            int64  `protobuf:"varint,6,opt,name=DelState,proto3" json:"DelState"`
	Sn                  string `protobuf:"bytes,7,opt,name=Sn,proto3" json:"Sn"`
	HomestayId          int64  `protobuf:"varint,8,opt,name=HomestayId,proto3" json:"HomestayId"`
	UserId              int64  `protobuf:"varint,9,opt,name=UserId,proto3" json:"UserId"`
	Title               string `protobuf:"bytes,10,opt,name=Title,proto3" json:"Title"`
	SubTitle            string `protobuf:"bytes,11,opt,name=SubTitle,proto3" json:"SubTitle"`
	Cover               string `protobuf:"bytes,12,opt,name=Cover,proto3" json:"Cover"`
	Info                string `protobuf:"bytes,13,opt,name=Info,proto3" json:"Info"`
	PeopleNum           int64  `protobuf:"varint,14,opt,name=PeopleNum,proto3" json:"PeopleNum"`
	RowType             int64  `protobuf:"varint,15,opt,name=RowType,proto3" json:"RowType"`
	NeedFood            int64  `protobuf:"varint,16,opt,name=NeedFood,proto3" json:"NeedFood"`
	FoodInfo            string `protobuf:"bytes,17,opt,name=FoodInfo,proto3" json:"FoodInfo"`
	FoodPrice           int64  `protobuf:"varint,18,opt,name=FoodPrice,proto3" json:"FoodPrice"`
	HomestayPrice       int64  `protobuf:"varint,19,opt,name=HomestayPrice,proto3" json:"HomestayPrice"`
	MarketHomestayPrice int64  `protobuf:"varint,20,opt,name=MarketHomestayPrice,proto3" json:"MarketHomestayPrice"`
	HomwstayBusinessId  int64  `protobuf:"varint,21,opt,name=HomwstayBusinessId,proto3" json:"HomwstayBusinessId"`
	HomestayUserId      int64  `protobuf:"varint,22,opt,name=HomestayUserId,proto3" json:"HomestayUserId"`
	LiveStartDate       int64  `protobuf:"varint,23,opt,name=LiveStartDate,proto3" json:"LiveStartDate"`
	LiveEndDate         int64  `protobuf:"varint,24,opt,name=LiveEndDate,proto3" json:"LiveEndDate"`
	LivePeopleNum       int64  `protobuf:"varint,25,opt,name=LivePeopleNum,proto3" json:"LivePeopleNum"`
	TradeState          int64  `protobuf:"varint,26,opt,name=TradeState,proto3" json:"TradeState"`
	TradeCode           string `protobuf:"bytes,27,opt,name=TradeCode,proto3" json:"TradeCode"`
	Remark              string `protobuf:"bytes,28,opt,name=Remark,proto3" json:"Remark"`
	OrderTotalPrice     int64  `protobuf:"varint,29,opt,name=OrderTotalPrice,proto3" json:"OrderTotalPrice"`
	FoodTotalPrice      int64  `protobuf:"varint,30,opt,name=FoodTotalPrice,proto3" json:"FoodTotalPrice"`
	HomestayTotalPrice  int64  `protobuf:"varint,31,opt,name=HomestayTotalPrice,proto3" json:"HomestayTotalPrice"`
}

func (x *ListOrderItemResp) Reset() {
	*x = ListOrderItemResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrderItemResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrderItemResp) ProtoMessage() {}

func (x *ListOrderItemResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrderItemResp.ProtoReflect.Descriptor instead.
func (*ListOrderItemResp) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{14}
}

func (x *ListOrderItemResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListOrderItemResp) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ListOrderItemResp) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *ListOrderItemResp) GetDeleteTime() string {
	if x != nil {
		return x.DeleteTime
	}
	return ""
}

func (x *ListOrderItemResp) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ListOrderItemResp) GetDelState() int64 {
	if x != nil {
		return x.DelState
	}
	return 0
}

func (x *ListOrderItemResp) GetSn() string {
	if x != nil {
		return x.Sn
	}
	return ""
}

func (x *ListOrderItemResp) GetHomestayId() int64 {
	if x != nil {
		return x.HomestayId
	}
	return 0
}

func (x *ListOrderItemResp) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ListOrderItemResp) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ListOrderItemResp) GetSubTitle() string {
	if x != nil {
		return x.SubTitle
	}
	return ""
}

func (x *ListOrderItemResp) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *ListOrderItemResp) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *ListOrderItemResp) GetPeopleNum() int64 {
	if x != nil {
		return x.PeopleNum
	}
	return 0
}

func (x *ListOrderItemResp) GetRowType() int64 {
	if x != nil {
		return x.RowType
	}
	return 0
}

func (x *ListOrderItemResp) GetNeedFood() int64 {
	if x != nil {
		return x.NeedFood
	}
	return 0
}

func (x *ListOrderItemResp) GetFoodInfo() string {
	if x != nil {
		return x.FoodInfo
	}
	return ""
}

func (x *ListOrderItemResp) GetFoodPrice() int64 {
	if x != nil {
		return x.FoodPrice
	}
	return 0
}

func (x *ListOrderItemResp) GetHomestayPrice() int64 {
	if x != nil {
		return x.HomestayPrice
	}
	return 0
}

func (x *ListOrderItemResp) GetMarketHomestayPrice() int64 {
	if x != nil {
		return x.MarketHomestayPrice
	}
	return 0
}

func (x *ListOrderItemResp) GetHomwstayBusinessId() int64 {
	if x != nil {
		return x.HomwstayBusinessId
	}
	return 0
}

func (x *ListOrderItemResp) GetHomestayUserId() int64 {
	if x != nil {
		return x.HomestayUserId
	}
	return 0
}

func (x *ListOrderItemResp) GetLiveStartDate() int64 {
	if x != nil {
		return x.LiveStartDate
	}
	return 0
}

func (x *ListOrderItemResp) GetLiveEndDate() int64 {
	if x != nil {
		return x.LiveEndDate
	}
	return 0
}

func (x *ListOrderItemResp) GetLivePeopleNum() int64 {
	if x != nil {
		return x.LivePeopleNum
	}
	return 0
}

func (x *ListOrderItemResp) GetTradeState() int64 {
	if x != nil {
		return x.TradeState
	}
	return 0
}

func (x *ListOrderItemResp) GetTradeCode() string {
	if x != nil {
		return x.TradeCode
	}
	return ""
}

func (x *ListOrderItemResp) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *ListOrderItemResp) GetOrderTotalPrice() int64 {
	if x != nil {
		return x.OrderTotalPrice
	}
	return 0
}

func (x *ListOrderItemResp) GetFoodTotalPrice() int64 {
	if x != nil {
		return x.FoodTotalPrice
	}
	return 0
}

func (x *ListOrderItemResp) GetHomestayTotalPrice() int64 {
	if x != nil {
		return x.HomestayTotalPrice
	}
	return 0
}

type ListOrderResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64                `protobuf:"varint,1,opt,name=Total,proto3" json:"Total"`
	List  []*ListOrderItemResp `protobuf:"bytes,2,rep,name=List,proto3" json:"List"`
}

func (x *ListOrderResp) Reset() {
	*x = ListOrderResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListOrderResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrderResp) ProtoMessage() {}

func (x *ListOrderResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrderResp.ProtoReflect.Descriptor instead.
func (*ListOrderResp) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{15}
}

func (x *ListOrderResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListOrderResp) GetList() []*ListOrderItemResp {
	if x != nil {
		return x.List
	}
	return nil
}

type UpdateOrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id"`
	CreateTime          string `protobuf:"bytes,2,opt,name=CreateTime,proto3" json:"CreateTime"`
	UpdateTime          string `protobuf:"bytes,3,opt,name=UpdateTime,proto3" json:"UpdateTime"`
	DeleteTime          string `protobuf:"bytes,4,opt,name=DeleteTime,proto3" json:"DeleteTime"`
	Version             int64  `protobuf:"varint,5,opt,name=version,proto3" json:"version"`
	DelState            int64  `protobuf:"varint,6,opt,name=DelState,proto3" json:"DelState"`
	Sn                  string `protobuf:"bytes,7,opt,name=Sn,proto3" json:"Sn"`
	HomestayId          int64  `protobuf:"varint,8,opt,name=HomestayId,proto3" json:"HomestayId"`
	UserId              int64  `protobuf:"varint,9,opt,name=UserId,proto3" json:"UserId"`
	Title               string `protobuf:"bytes,10,opt,name=Title,proto3" json:"Title"`
	SubTitle            string `protobuf:"bytes,11,opt,name=SubTitle,proto3" json:"SubTitle"`
	Cover               string `protobuf:"bytes,12,opt,name=Cover,proto3" json:"Cover"`
	Info                string `protobuf:"bytes,13,opt,name=Info,proto3" json:"Info"`
	PeopleNum           int64  `protobuf:"varint,14,opt,name=PeopleNum,proto3" json:"PeopleNum"`
	RowType             int64  `protobuf:"varint,15,opt,name=RowType,proto3" json:"RowType"`
	NeedFood            int64  `protobuf:"varint,16,opt,name=NeedFood,proto3" json:"NeedFood"`
	FoodInfo            string `protobuf:"bytes,17,opt,name=FoodInfo,proto3" json:"FoodInfo"`
	FoodPrice           int64  `protobuf:"varint,18,opt,name=FoodPrice,proto3" json:"FoodPrice"`
	HomestayPrice       int64  `protobuf:"varint,19,opt,name=HomestayPrice,proto3" json:"HomestayPrice"`
	MarketHomestayPrice int64  `protobuf:"varint,20,opt,name=MarketHomestayPrice,proto3" json:"MarketHomestayPrice"`
	HomwstayBusinessId  int64  `protobuf:"varint,21,opt,name=HomwstayBusinessId,proto3" json:"HomwstayBusinessId"`
	HomestayUserId      int64  `protobuf:"varint,22,opt,name=HomestayUserId,proto3" json:"HomestayUserId"`
	LiveStartDate       int64  `protobuf:"varint,23,opt,name=LiveStartDate,proto3" json:"LiveStartDate"`
	LiveEndDate         int64  `protobuf:"varint,24,opt,name=LiveEndDate,proto3" json:"LiveEndDate"`
	LivePeopleNum       int64  `protobuf:"varint,25,opt,name=LivePeopleNum,proto3" json:"LivePeopleNum"`
	TradeState          int64  `protobuf:"varint,26,opt,name=TradeState,proto3" json:"TradeState"`
	TradeCode           string `protobuf:"bytes,27,opt,name=TradeCode,proto3" json:"TradeCode"`
	Remark              string `protobuf:"bytes,28,opt,name=Remark,proto3" json:"Remark"`
	OrderTotalPrice     int64  `protobuf:"varint,29,opt,name=OrderTotalPrice,proto3" json:"OrderTotalPrice"`
	FoodTotalPrice      int64  `protobuf:"varint,30,opt,name=FoodTotalPrice,proto3" json:"FoodTotalPrice"`
	HomestayTotalPrice  int64  `protobuf:"varint,31,opt,name=HomestayTotalPrice,proto3" json:"HomestayTotalPrice"`
}

func (x *UpdateOrderReq) Reset() {
	*x = UpdateOrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrderReq) ProtoMessage() {}

func (x *UpdateOrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrderReq.ProtoReflect.Descriptor instead.
func (*UpdateOrderReq) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateOrderReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateOrderReq) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *UpdateOrderReq) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *UpdateOrderReq) GetDeleteTime() string {
	if x != nil {
		return x.DeleteTime
	}
	return ""
}

func (x *UpdateOrderReq) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UpdateOrderReq) GetDelState() int64 {
	if x != nil {
		return x.DelState
	}
	return 0
}

func (x *UpdateOrderReq) GetSn() string {
	if x != nil {
		return x.Sn
	}
	return ""
}

func (x *UpdateOrderReq) GetHomestayId() int64 {
	if x != nil {
		return x.HomestayId
	}
	return 0
}

func (x *UpdateOrderReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateOrderReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateOrderReq) GetSubTitle() string {
	if x != nil {
		return x.SubTitle
	}
	return ""
}

func (x *UpdateOrderReq) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *UpdateOrderReq) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *UpdateOrderReq) GetPeopleNum() int64 {
	if x != nil {
		return x.PeopleNum
	}
	return 0
}

func (x *UpdateOrderReq) GetRowType() int64 {
	if x != nil {
		return x.RowType
	}
	return 0
}

func (x *UpdateOrderReq) GetNeedFood() int64 {
	if x != nil {
		return x.NeedFood
	}
	return 0
}

func (x *UpdateOrderReq) GetFoodInfo() string {
	if x != nil {
		return x.FoodInfo
	}
	return ""
}

func (x *UpdateOrderReq) GetFoodPrice() int64 {
	if x != nil {
		return x.FoodPrice
	}
	return 0
}

func (x *UpdateOrderReq) GetHomestayPrice() int64 {
	if x != nil {
		return x.HomestayPrice
	}
	return 0
}

func (x *UpdateOrderReq) GetMarketHomestayPrice() int64 {
	if x != nil {
		return x.MarketHomestayPrice
	}
	return 0
}

func (x *UpdateOrderReq) GetHomwstayBusinessId() int64 {
	if x != nil {
		return x.HomwstayBusinessId
	}
	return 0
}

func (x *UpdateOrderReq) GetHomestayUserId() int64 {
	if x != nil {
		return x.HomestayUserId
	}
	return 0
}

func (x *UpdateOrderReq) GetLiveStartDate() int64 {
	if x != nil {
		return x.LiveStartDate
	}
	return 0
}

func (x *UpdateOrderReq) GetLiveEndDate() int64 {
	if x != nil {
		return x.LiveEndDate
	}
	return 0
}

func (x *UpdateOrderReq) GetLivePeopleNum() int64 {
	if x != nil {
		return x.LivePeopleNum
	}
	return 0
}

func (x *UpdateOrderReq) GetTradeState() int64 {
	if x != nil {
		return x.TradeState
	}
	return 0
}

func (x *UpdateOrderReq) GetTradeCode() string {
	if x != nil {
		return x.TradeCode
	}
	return ""
}

func (x *UpdateOrderReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *UpdateOrderReq) GetOrderTotalPrice() int64 {
	if x != nil {
		return x.OrderTotalPrice
	}
	return 0
}

func (x *UpdateOrderReq) GetFoodTotalPrice() int64 {
	if x != nil {
		return x.FoodTotalPrice
	}
	return 0
}

func (x *UpdateOrderReq) GetHomestayTotalPrice() int64 {
	if x != nil {
		return x.HomestayTotalPrice
	}
	return 0
}

type UpdateOrderResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong int64 `protobuf:"varint,1,opt,name=Pong,proto3" json:"Pong"`
}

func (x *UpdateOrderResp) Reset() {
	*x = UpdateOrderResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_order_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrderResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrderResp) ProtoMessage() {}

func (x *UpdateOrderResp) ProtoReflect() protoreflect.Message {
	mi := &file_order_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrderResp.ProtoReflect.Descriptor instead.
func (*UpdateOrderResp) Descriptor() ([]byte, []int) {
	return file_order_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateOrderResp) GetPong() int64 {
	if x != nil {
		return x.Pong
	}
	return 0
}

var File_order_proto protoreflect.FileDescriptor

var file_order_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70,
	0x62, 0x22, 0xdd, 0x07, 0x0a, 0x0d, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x73, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x68,
	0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x68, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x65, 0x6f, 0x70, 0x6c,
	0x65, 0x4e, 0x75, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x65, 0x6f, 0x70,
	0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x66, 0x6f, 0x6f, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x6f, 0x6f, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x66,
	0x6f, 0x6f, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x66, 0x6f, 0x6f, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x68, 0x6f, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x68, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x30, 0x0a, 0x13, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x2e, 0x0a, 0x12, 0x68, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x68,
	0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49,
	0x64, 0x12, 0x26, 0x0a, 0x0e, 0x68, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x68, 0x6f, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x69, 0x76,
	0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x6c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x76, 0x65, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x69, 0x76, 0x65, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x69, 0x76, 0x65, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x4e,
	0x75, 0x6d, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6c, 0x69, 0x76, 0x65, 0x50, 0x65,
	0x6f, 0x70, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x28, 0x0a,
	0x0f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x66, 0x6f, 0x6f, 0x64, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0e, 0x66, 0x6f, 0x6f, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x2e, 0x0a, 0x12, 0x68, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x68, 0x6f, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x79, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x1a, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x6e, 0x65, 0x65, 0x64, 0x46, 0x6f, 0x6f, 0x64, 0x18, 0x1b, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x6e, 0x65, 0x65, 0x64, 0x46, 0x6f, 0x6f, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x1f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0xee, 0x01, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a,
	0x68, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x68, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x69, 0x73, 0x46, 0x6f, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73,
	0x46, 0x6f, 0x6f, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6c, 0x69, 0x76,
	0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69,
	0x76, 0x65, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x6c, 0x69, 0x76, 0x65, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x69, 0x76, 0x65, 0x50, 0x65, 0x6f, 0x70,
	0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6c, 0x69, 0x76,
	0x65, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x22, 0x29, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a,
	0x02, 0x73, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x73, 0x6e, 0x22, 0x28, 0x0a,
	0x16, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x73, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x73, 0x6e, 0x22, 0x52, 0x0a, 0x17, 0x48, 0x6f, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x37, 0x0a, 0x0d, 0x68, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x48,
	0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x0d, 0x68, 0x6f,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x52, 0x0a, 0x20, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x73, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x73, 0x6e, 0x12,
	0x1e, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22,
	0x81, 0x02, 0x0a, 0x21, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x0e, 0x0a,
	0x02, 0x73, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x73, 0x6e, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6c,
	0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x6c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x76, 0x65, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x69, 0x76, 0x65, 0x45, 0x6e, 0x64, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x22, 0x88, 0x01, 0x0a, 0x18, 0x55, 0x73, 0x65, 0x72, 0x48, 0x6f, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x42,
	0x0a, 0x19, 0x55, 0x73, 0x65, 0x72, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x25, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x48,
	0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x22, 0xdb, 0x07, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x44, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x44, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x53, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x53, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x48, 0x6f, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x79, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x48, 0x6f,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x75, 0x62, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x75, 0x62, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09,
	0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x6f,
	0x77, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x52, 0x6f, 0x77,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x65, 0x65, 0x64, 0x46, 0x6f, 0x6f, 0x64,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4e, 0x65, 0x65, 0x64, 0x46, 0x6f, 0x6f, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x46, 0x6f, 0x6f, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x46, 0x6f, 0x6f, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09,
	0x46, 0x6f, 0x6f, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x46, 0x6f, 0x6f, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x48, 0x6f,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x30, 0x0a, 0x13, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x48, 0x6f, 0x6d, 0x77, 0x73, 0x74, 0x61, 0x79, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12,
	0x48, 0x6f, 0x6d, 0x77, 0x73, 0x74, 0x61, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x48, 0x6f, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x4c, 0x69,
	0x76, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x4c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x4c, 0x69, 0x76, 0x65, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18,
	0x18, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x4c, 0x69, 0x76, 0x65, 0x45, 0x6e, 0x64, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x4c, 0x69, 0x76, 0x65, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65,
	0x4e, 0x75, 0x6d, 0x18, 0x19, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x4c, 0x69, 0x76, 0x65, 0x50,
	0x65, 0x6f, 0x70, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x28,
	0x0a, 0x0f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x46, 0x6f, 0x6f, 0x64,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x46, 0x6f, 0x6f, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x2e, 0x0a, 0x12, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x48, 0x6f,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x22, 0x22, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x50, 0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x50, 0x6f, 0x6e, 0x67, 0x22, 0x20, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x22, 0x25, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x6f, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x50, 0x6f, 0x6e, 0x67, 0x22, 0x52, 0x0a,
	0x0c, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x22, 0xe1, 0x07, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x44, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x53, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x53, 0x6e, 0x12, 0x1e, 0x0a,
	0x0a, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x53,
	0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53,
	0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x76, 0x65, 0x72,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x12,
	0x18, 0x0a, 0x07, 0x52, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x52, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x65, 0x65,
	0x64, 0x46, 0x6f, 0x6f, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4e, 0x65, 0x65,
	0x64, 0x46, 0x6f, 0x6f, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x6f, 0x6f, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x6f, 0x6f, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x6f, 0x6f, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x46, 0x6f, 0x6f, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x48,
	0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x13, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x48, 0x6f, 0x6d, 0x77, 0x73,
	0x74, 0x61, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x12, 0x48, 0x6f, 0x6d, 0x77, 0x73, 0x74, 0x61, 0x79, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x48, 0x6f, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0e, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x24, 0x0a, 0x0d, 0x4c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x4c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x4c, 0x69, 0x76, 0x65, 0x45, 0x6e, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x4c, 0x69, 0x76, 0x65,
	0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x4c, 0x69, 0x76, 0x65, 0x50,
	0x65, 0x6f, 0x70, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x19, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x4c, 0x69, 0x76, 0x65, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1e, 0x0a,
	0x0a, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x54, 0x72, 0x61, 0x64, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x54, 0x72, 0x61, 0x64, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x52,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x12, 0x28, 0x0a, 0x0f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x26, 0x0a,
	0x0e, 0x46, 0x6f, 0x6f, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x46, 0x6f, 0x6f, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x79, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x12, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x50, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x29, 0x0a, 0x04,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x62, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x52, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xde, 0x07, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x44, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x53, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x53, 0x6e,
	0x12, 0x1e, 0x0a, 0x0a, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x49, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x53, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x53, 0x75, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f,
	0x76, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x43, 0x6f, 0x76, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x4e, 0x75,
	0x6d, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x4e,
	0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x52, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x4e, 0x65, 0x65, 0x64, 0x46, 0x6f, 0x6f, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x4e, 0x65, 0x65, 0x64, 0x46, 0x6f, 0x6f, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x6f, 0x6f, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x6f, 0x6f, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x6f, 0x6f, 0x64, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x46, 0x6f, 0x6f, 0x64, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x48, 0x6f, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x48, 0x6f, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x48, 0x6f,
	0x6d, 0x77, 0x73, 0x74, 0x61, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x48, 0x6f, 0x6d, 0x77, 0x73, 0x74, 0x61, 0x79,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x48, 0x6f,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x4c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44,
	0x61, 0x74, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x4c, 0x69, 0x76, 0x65, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x4c, 0x69, 0x76, 0x65,
	0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x4c,
	0x69, 0x76, 0x65, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x4c, 0x69,
	0x76, 0x65, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x19, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x4c, 0x69, 0x76, 0x65, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x4e, 0x75, 0x6d,
	0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x1a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x54, 0x72, 0x61, 0x64, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x1b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x54, 0x72, 0x61, 0x64, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x28, 0x0a, 0x0f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x26, 0x0a, 0x0e, 0x46, 0x6f, 0x6f, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x46, 0x6f, 0x6f, 0x64, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x48, 0x6f, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x79, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x1f,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x25, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x50,
	0x6f, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x50, 0x6f, 0x6e, 0x67, 0x32,
	0xbc, 0x04, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x4e, 0x0a, 0x13, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4e, 0x0a, 0x13, 0x68, 0x6f, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x70,
	0x62, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6c, 0x0a, 0x1d, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x24, 0x2e, 0x70, 0x62, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x25, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x54, 0x0a, 0x15, 0x75, 0x73, 0x65, 0x72, 0x48,
	0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1d,
	0x2e, 0x70, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2d, 0x0a,
	0x08, 0x61, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x41,
	0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x2e,
	0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0b,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x12, 0x2e, 0x70, 0x62,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a,
	0x13, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x30, 0x0a, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x42, 0x06,
	0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_order_proto_rawDescOnce sync.Once
	file_order_proto_rawDescData = file_order_proto_rawDesc
)

func file_order_proto_rawDescGZIP() []byte {
	file_order_proto_rawDescOnce.Do(func() {
		file_order_proto_rawDescData = protoimpl.X.CompressGZIP(file_order_proto_rawDescData)
	})
	return file_order_proto_rawDescData
}

var file_order_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_order_proto_goTypes = []interface{}{
	(*HomestayOrder)(nil),                     // 0: pb.HomestayOrder
	(*CreateHomestayOrderReq)(nil),            // 1: pb.CreateHomestayOrderReq
	(*CreateHomestayOrderResp)(nil),           // 2: pb.CreateHomestayOrderResp
	(*HomestayOrderDetailReq)(nil),            // 3: pb.HomestayOrderDetailReq
	(*HomestayOrderDetailResp)(nil),           // 4: pb.HomestayOrderDetailResp
	(*UpdateHomestayOrderTradeStateReq)(nil),  // 5: pb.UpdateHomestayOrderTradeStateReq
	(*UpdateHomestayOrderTradeStateResp)(nil), // 6: pb.UpdateHomestayOrderTradeStateResp
	(*UserHomestayOrderListReq)(nil),          // 7: pb.UserHomestayOrderListReq
	(*UserHomestayOrderListResp)(nil),         // 8: pb.UserHomestayOrderListResp
	(*AddOrderReq)(nil),                       // 9: pb.AddOrderReq
	(*AddOrderResp)(nil),                      // 10: pb.AddOrderResp
	(*DeleteOrderReq)(nil),                    // 11: pb.DeleteOrderReq
	(*DeleteOrderResp)(nil),                   // 12: pb.DeleteOrderResp
	(*ListOrderReq)(nil),                      // 13: pb.ListOrderReq
	(*ListOrderItemResp)(nil),                 // 14: pb.ListOrderItemResp
	(*ListOrderResp)(nil),                     // 15: pb.ListOrderResp
	(*UpdateOrderReq)(nil),                    // 16: pb.UpdateOrderReq
	(*UpdateOrderResp)(nil),                   // 17: pb.UpdateOrderResp
}
var file_order_proto_depIdxs = []int32{
	0,  // 0: pb.HomestayOrderDetailResp.homestayOrder:type_name -> pb.HomestayOrder
	0,  // 1: pb.UserHomestayOrderListResp.list:type_name -> pb.HomestayOrder
	14, // 2: pb.ListOrderResp.List:type_name -> pb.ListOrderItemResp
	1,  // 3: pb.order.createHomestayOrder:input_type -> pb.CreateHomestayOrderReq
	3,  // 4: pb.order.homestayOrderDetail:input_type -> pb.HomestayOrderDetailReq
	5,  // 5: pb.order.updateHomestayOrderTradeState:input_type -> pb.UpdateHomestayOrderTradeStateReq
	7,  // 6: pb.order.userHomestayOrderList:input_type -> pb.UserHomestayOrderListReq
	9,  // 7: pb.order.addOrder:input_type -> pb.AddOrderReq
	11, // 8: pb.order.deleteOrder:input_type -> pb.DeleteOrderReq
	13, // 9: pb.order.listOrder:input_type -> pb.ListOrderReq
	16, // 10: pb.order.updateOrder:input_type -> pb.UpdateOrderReq
	2,  // 11: pb.order.createHomestayOrder:output_type -> pb.CreateHomestayOrderResp
	4,  // 12: pb.order.homestayOrderDetail:output_type -> pb.HomestayOrderDetailResp
	6,  // 13: pb.order.updateHomestayOrderTradeState:output_type -> pb.UpdateHomestayOrderTradeStateResp
	8,  // 14: pb.order.userHomestayOrderList:output_type -> pb.UserHomestayOrderListResp
	10, // 15: pb.order.addOrder:output_type -> pb.AddOrderResp
	12, // 16: pb.order.deleteOrder:output_type -> pb.DeleteOrderResp
	15, // 17: pb.order.listOrder:output_type -> pb.ListOrderResp
	17, // 18: pb.order.updateOrder:output_type -> pb.UpdateOrderResp
	11, // [11:19] is the sub-list for method output_type
	3,  // [3:11] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_order_proto_init() }
func file_order_proto_init() {
	if File_order_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_order_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomestayOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateHomestayOrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateHomestayOrderResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomestayOrderDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomestayOrderDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHomestayOrderTradeStateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHomestayOrderTradeStateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserHomestayOrderListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserHomestayOrderListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddOrderResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOrderResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrderItemResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListOrderResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_order_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrderResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_order_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_order_proto_goTypes,
		DependencyIndexes: file_order_proto_depIdxs,
		MessageInfos:      file_order_proto_msgTypes,
	}.Build()
	File_order_proto = out.File
	file_order_proto_rawDesc = nil
	file_order_proto_goTypes = nil
	file_order_proto_depIdxs = nil
}
