// Code generated by goctl. DO NOT EDIT!
// Source: travel.proto

package server

import (
	"context"

	"go-travel/service/travel/cmd/rpc/internal/logic"
	"go-travel/service/travel/cmd/rpc/internal/svc"
	"go-travel/service/travel/cmd/rpc/pb"
)

type TravelServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedTravelServer
}

func NewTravelServer(svcCtx *svc.ServiceContext) *TravelServer {
	return &TravelServer{
		svcCtx: svcCtx,
	}
}

// homestayDetail
func (s *TravelServer) HomestayDetail(ctx context.Context, in *pb.HomestayDetailReq) (*pb.HomestayDetailResp, error) {
	l := logic.NewHomestayDetailLogic(ctx, s.svcCtx)
	return l.HomestayDetail(in)
}

// provide to admin use
func (s *TravelServer) AddHomestay(ctx context.Context, in *pb.AddHomestayReq) (*pb.AddHomestayResp, error) {
	l := logic.NewAddHomestayLogic(ctx, s.svcCtx)
	return l.AddHomestay(in)
}

func (s *TravelServer) DeleteHomestay(ctx context.Context, in *pb.DeleteHomestayReq) (*pb.DeleteHomestayResp, error) {
	l := logic.NewDeleteHomestayLogic(ctx, s.svcCtx)
	return l.DeleteHomestay(in)
}

func (s *TravelServer) UpdateHomestay(ctx context.Context, in *pb.UpdateHomestayReq) (*pb.UpdateHomestayResp, error) {
	l := logic.NewUpdateHomestayLogic(ctx, s.svcCtx)
	return l.UpdateHomestay(in)
}

func (s *TravelServer) ListHomestay(ctx context.Context, in *pb.ListHomestayReq) (*pb.ListHomestayResp, error) {
	l := logic.NewListHomestayLogic(ctx, s.svcCtx)
	return l.ListHomestay(in)
}

// homestayActivity
func (s *TravelServer) AddHomestayActivity(ctx context.Context, in *pb.AddHomestayActivityReq) (*pb.AddHomestayActivityResp, error) {
	l := logic.NewAddHomestayActivityLogic(ctx, s.svcCtx)
	return l.AddHomestayActivity(in)
}

func (s *TravelServer) DeleteHomestatActivity(ctx context.Context, in *pb.DeleteHomestayActivityReq) (*pb.DeleteHomestayResp, error) {
	l := logic.NewDeleteHomestatActivityLogic(ctx, s.svcCtx)
	return l.DeleteHomestatActivity(in)
}

func (s *TravelServer) UpdateHomestayActivity(ctx context.Context, in *pb.UpdateHomestayActivityReq) (*pb.UpdateHomestayActivityResp, error) {
	l := logic.NewUpdateHomestayActivityLogic(ctx, s.svcCtx)
	return l.UpdateHomestayActivity(in)
}

func (s *TravelServer) ListHomestayActivity(ctx context.Context, in *pb.ListHomestayActivityReq) (*pb.ListHomestayActivityResp, error) {
	l := logic.NewListHomestayActivityLogic(ctx, s.svcCtx)
	return l.ListHomestayActivity(in)
}

// homestayBusiness
func (s *TravelServer) AddHomestayBusiness(ctx context.Context, in *pb.AddHomestayBusinessReq) (*pb.AddHomestayActivityResp, error) {
	l := logic.NewAddHomestayBusinessLogic(ctx, s.svcCtx)
	return l.AddHomestayBusiness(in)
}

func (s *TravelServer) DeleteHomestayBusiness(ctx context.Context, in *pb.DeleteHomestayBusinessReq) (*pb.DeleteHomestayBusinessResp, error) {
	l := logic.NewDeleteHomestayBusinessLogic(ctx, s.svcCtx)
	return l.DeleteHomestayBusiness(in)
}

func (s *TravelServer) UpdateHomestayBussiness(ctx context.Context, in *pb.UpdateHomestayBusinessReq) (*pb.UpdateHomestayBusinessResp, error) {
	l := logic.NewUpdateHomestayBussinessLogic(ctx, s.svcCtx)
	return l.UpdateHomestayBussiness(in)
}

func (s *TravelServer) ListHomestayBussiness(ctx context.Context, in *pb.ListHomestayBusinessReq) (*pb.ListHomestayBusinessResp, error) {
	l := logic.NewListHomestayBussinessLogic(ctx, s.svcCtx)
	return l.ListHomestayBussiness(in)
}

// homestayComment
func (s *TravelServer) ListHomestayComment(ctx context.Context, in *pb.ListHomestaycommentReq) (*pb.ListHomestaycommentResp, error) {
	l := logic.NewListHomestayCommentLogic(ctx, s.svcCtx)
	return l.ListHomestayComment(in)
}

func (s *TravelServer) AddHomestayComment(ctx context.Context, in *pb.AddHomestaycommentReq) (*pb.AddHomestaycommentResp, error) {
	l := logic.NewAddHomestayCommentLogic(ctx, s.svcCtx)
	return l.AddHomestayComment(in)
}

func (s *TravelServer) DeleteHomestayComment(ctx context.Context, in *pb.DeleteHomestaycommentReq) (*pb.DeleteHomestaycommentResp, error) {
	l := logic.NewDeleteHomestayCommentLogic(ctx, s.svcCtx)
	return l.DeleteHomestayComment(in)
}

func (s *TravelServer) UpdateHomestayComment(ctx context.Context, in *pb.UpdateHomestaycommentReq) (*pb.UpdateHomestaycommentResp, error) {
	l := logic.NewUpdateHomestayCommentLogic(ctx, s.svcCtx)
	return l.UpdateHomestayComment(in)
}
