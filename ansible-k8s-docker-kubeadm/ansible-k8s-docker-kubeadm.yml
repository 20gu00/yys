- name: k8s-all-node-do
  hosts: k8sallnode
  gather_facts: no
  remote_user: root
  tasks:
  - name: stop-firewalld
    systemd:
      name: firewalld
      enabled: no
      state: stopped
  - name: stop-selinux
    shell: setenforce 0 && sed -ir "/^SELINUX=/c SELINUX=disabled" /etc/selinux/config
  - name: open-br-netfilter1
    shell: modprobe br_netfilter
  - name: open-br-netfilter2
    copy: src=./k8s.conf dest=/etc/sysctl.d/k8s.conf
  - name: open-br-netfilter3
    shell: sysctl -p /etc/sysctl.d/k8s.conf
  - name: ipvs1
    copy: src=./ipvs.modules dest=/etc/sysconfig/modules/ipvs.modules
  - name: ipvs2
    shell: chmod 755 /etc/sysconfig/modules/ipvs.modules && bash /etc/sysconfig/modules/ipvs.modules
  - name: install-ipset-ipvsadm-chrony
    shell: yum install ipset ipvsadm  chrony -y && systemctl enable chronyd && systemctl restart chronyd && chronyc sources
  - name: stop-swap1
    shell: swapoff -a
  - name: stop-swap2
    copy: src=./k8s-2.conf dest=/etc/sysctl.d/k8s.conf
  - name: stop-swap3
    shell: sysctl -p /etc/sysctl.d/k8s.conf
  - name: install-yum-utils-device-mapper-persistent-data-lvm2
    shell: yum install -y yum-utils device-mapper-persistent-data lvm2
  - name: docker-yum
    shell: yum-config-manager --add-repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo && sed -i 's+download.docker.com+mirrors.aliyun.com/docker-ce+' /etc/yum.repos.d/docker-ce.repo && yum makecache fast && yum install -y docker-ce-19.03.11
  - name: docker-dir
    shell: mkdir /etc/docker
  - name: daemon.json
    copy: src=./daemon.json dest=/etc/docker/daemon.json
  - name: open-docker
    shell: systemctl start docker && systemctl enable docker
  - name: kubernetes.repo
    copy: src=./kubernetes.repo dest=/etc/yum.repos.d/kubernetes.repo
  - name: install-kubelet-kubectl-kubeadm
    shell: yum makecache fast && yum install -y kubelet-1.19.3 kubeadm-1.19.3 kubectl-1.19.3 --disableexcludes=kubernetes && systemctl enable --now kubelet
- name: k8s-master-do
  hosts: k8smaster
  gather_facts: no
  remote_user: root
  tasks:
  - name: kubeadm.yaml
    copy: src=./kubeadm.yaml dest=kubeadm.yaml
  - name: apply-kubeadm.yaml
    shell: kubeadm init --config kubeadm.yaml
  - name: add-kubeconfigfile
    shell: mkdir -p $HOME/.kube && cp -i /etc/kubernetes/admin.conf $HOME/.kube/config && chown $(id -u):$(id -g) $HOME/.kube/config

- name: k8s-work-node-do
  gather_facts: no
  hosts: k8sworknode
  remote_user: root
  tasks:
  - name: add-dir
    shell: mkdir /root/.kube
  - name: add-kubeconfigfile
    copy: src=/root/.kube/config dest=/root/.kube/config
- name: k8s-master-token
  gather_facts: no
  hosts: k8smaster
  remote_user: root
  tasks:
  - name: add-token
    shell: kubeadm token create --print-join-command > /root/yunyuansheng/ansible-k8s-docker-kubeadm/join-token
- name: k8s-work-node
  gather_facts: no
  hosts: k8sworknode
  remote_user: root
  tasks:
  - name: add-token
    copy: src=./join-token dest=/root/join-token
  - name: join-cluster
    shell: sh -c "$(cat /root/join-token)"
- name: k8s-master
  gather_facts: no
  hosts: k8smaster
  remote_user: root
  tasks:
  - name: flannel
    shell: kubectl apply -f /root/yunyuansheng/ansible-k8s-docker-kubeadm/kube-flannel.yml
